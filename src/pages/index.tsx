import Head from "next/head";
import { type RouterOutputs, api } from "~/utils/api";

import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Image from "next/image";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/loading";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full flex-row gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile pic"
        height={48}
        width={48}
        className="rounded-full"
      />
      <input
        placeholder="type some emojis"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

// number: because posts/getall is an array, we use number to tell TS that we want an element of the array
type PostWithUser = RouterOutputs["posts"]["getAll"][number]
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div
      className="flex flex-row items-center gap-3 border-b border-slate-400 p-4"
      key={post.id}
    >
      <Image
        src={author.profilePictureUrl}
        alt="Profile pic"
        height={48}
        width={48}
        className="rounded-full"
      />
      <div className="flex flex-col gap-y-1">
        <div className="flex flex-row gap-1">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

export default function Home() {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading)
    return <LoadingPage/>
  if (!data)
    return (
      <div className="flex w-full justify-center">Something went wrong</div>
    );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className=" h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex justify-center border-b border-slate-400 p-4">
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && (
              <div className="flex w-full flex-row">
                <CreatePostWizard />
                <SignOutButton />
              </div>
            )}
          </div>
          <div>
            {data?.map((postWithAuthor) => (
              <PostView {...postWithAuthor} key={postWithAuthor.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
